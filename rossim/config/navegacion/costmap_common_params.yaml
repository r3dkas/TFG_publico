global_frame: map
robot_base_frame: base_link ##base_footprint
transform_tolerance: 10.0
update_frequency: 2.0 #10.0 ##5.0 #10
publish_frequency: 5.0 #10.0 ##1.0 #100
obstacle_range: 8.0 #5.0 #3.0
#mark_threshold: 1
publish_voxel_map: true
allow_unknown: true
footprint_padding: 0.05
navigation_map:
  map_topic: /map

z_voxels: 1
max_obstacle_height: 8.0

#obstacles:
#  observation_sources: b_scan_marking b_scan_clearing #f_scan_marking f_scan_clearing
#  b_scan_marking:
#    sensor_frame: lidar
#    topic: /velodyne/scan
#    data_type: PointCloud
#    clearing: false
#    marking: true
#    inf_is_valid: true
#  b_scan_clearing:
#    sensor_frame: lidar
#    topic: /velodyne/scan
#    data_type: PointCloud
#    clearing: true
#    marking: false
#    inf_is_valid: true
#    

#obstacle_layer:
#  observation_sources: point_cloud_sensor
#  point_cloud_sensor: {sensor_frame: velodyneVPL, data_type: PointCloud2, topic: /velodyne/points2, marking: true, clearing: true}

static_layer:
  enabled: true
  map_topic: /costmap
  first_map_only: false
  


# Parameters for the underlying costmap used by both global and local costmaps
#costmap:
#  # Robot radius (used to inflate obstacles)
#  robot_radius: 0.3  # Adjust according to your robot's dimensions
#
#  # Obstacle inflation radius (how much to expand obstacles)
#  inflation_radius: 0.5  # Adjust according to your needs
#
#  # Resolution of the costmap
#  resolution: 0.05  # Adjust according to your map resolution
#
#  # Whether to use a rolling window for the costmap
#  rolling_window: true  # Set to false if you want a static map
#
#  # Parameters for the static map
#  static_map: false
#
#  # Whether to use a map topic to update the costmap
#  subscribe_to_updates: true
#
#  # Transform tolerance for updating the costmap from map updates
#  transform_tolerance: 0.5
#
## Parameters for the inflation layer (expanding obstacles)
#inflation_layer:
#  # Inflation method: 'expansion' or 'cost_scaling'
#  inflation_method: cost_scaling
#
#  # Inflation parameter for cost scaling method
#  cost_scaling_factor: 5.0
#
#  # Inflation radius for expansion method
#  inflation_radius: 0.5
#
